// A kdl generator looks at the base block and generates new entries for the module using each variant block.
// The contents of the `base` block are turned into a string (exactly like when a document is saved to text),
// substrings in that string are replaced using the key-value pairs in each variant,
// and the resulting document string is re-parsed as kdl for further processing.
generator "block" {
	base {
		// in this sample, the kdl generator creates new item generator for armor types.
		generator "item" {
			filter {
				armor "light" "medium" "heavy"
			}
			variant {
				extend "name" "{name} Armor of {DMG_TYPE} Resistance"
				extend "rarity" "Rare"
				extend "description" "You have resistance to {DMG_TYPE} damage while you wear this armor."
				// extending equipment allows us to override attunement and add mutators of the item when its equipped
				extend "equipment" requires_attunement=true {
					mutator "add_defense" "Resistance" (DamageType)"Specific" "{DMG_TYPE}"
				}
			}
		}
	}
	// variant can be short-handed to just have 1 key-value entry.
	// it is equivalent to `variant { entry "key" "value" }`
	variant "DMG_TYPE" "Acid"
	variant "DMG_TYPE" "Cold"
	variant "DMG_TYPE" "Fire"
	variant "DMG_TYPE" "Force"
	variant "DMG_TYPE" "Lightning"
	variant "DMG_TYPE" "Necrotic"
	variant "DMG_TYPE" "Poison"
	variant "DMG_TYPE" "Psychic"
	variant "DMG_TYPE" "Radiant"
	variant "DMG_TYPE" "Thunder"
}
